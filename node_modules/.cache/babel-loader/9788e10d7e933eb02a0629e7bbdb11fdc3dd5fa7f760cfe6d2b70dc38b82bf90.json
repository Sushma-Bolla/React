{"ast":null,"code":"var _jsxFileName = \"/Users/sidhardhabolla/Documents/Training/my_app/src/hooks/UseEffectEx.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseEffectEx = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  // useEffect(() => {\n  //   // setCount(1000);\n  //   setTimeout(() => { //to change the value of count after 4 seconds we use setTimeOut\n  //     setCount(1000);\n  //   }, 4000)\n  // })\n  const [users, setUsers] = useState([]);\n  console.log(users);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json().then(data => {\n      // console.log(data);\n      setUsers(data);\n    })).catch(err => console.log(err));\n  }, []); //empty dependency allows to execute only once\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"UseEffectEx\", users.map((user, i) => {}) //map each user to a div and return it as an array of divs. The key prop is used to uniquely identify each element in the array.\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UseEffectEx, \"eYHOgSwKe3yoIM824RCyfBWBfEM=\");\n_c = UseEffectEx;\nexport default UseEffectEx;\nvar _c;\n$RefreshReg$(_c, \"UseEffectEx\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UseEffectEx","_s","count","setCount","users","setUsers","console","log","fetch","then","response","json","data","catch","err","children","map","user","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sidhardhabolla/Documents/Training/my_app/src/hooks/UseEffectEx.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst UseEffectEx = () => {\n  const [count, setCount] = useState(0);\n  // useEffect(() => {\n  //   // setCount(1000);\n  //   setTimeout(() => { //to change the value of count after 4 seconds we use setTimeOut\n  //     setCount(1000);\n  //   }, 4000)\n  // })\n  const[users, setUsers] = useState([]);\n  console.log(users);\n  useEffect(()=>{\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response =>response.json().then(data=>{\n      // console.log(data);\n      setUsers(data);\n    }))\n    .catch(err=>console.log(err));\n  },[]); //empty dependency allows to execute only once\n  return (\n    <div>UseEffectEx\n      {/* <h1>{count}</h1> */}\n      {\n        users.map((user, i)=>{\n          \n        })  //map each user to a div and return it as an array of divs. The key prop is used to uniquely identify each element in the array.\n      }\n    </div>\n  )\n}\n\nexport default UseEffectEx"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA,MAAK,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrCS,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClBR,SAAS,CAAC,MAAI;IACZY,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAE;MAC1C;MACAP,QAAQ,CAACO,IAAI,CAAC;IAChB,CAAC,CAAC,CAAC,CACFC,KAAK,CAACC,GAAG,IAAER,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC;EAC/B,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;EACP,oBACEf,OAAA;IAAAgB,QAAA,GAAK,aACH,EAEEX,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAG,CAErB,CAAC,CAAC,CAAE;IAAA;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAArB,EAAA,CA5BKD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8BjB,eAAeA,WAAW;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}